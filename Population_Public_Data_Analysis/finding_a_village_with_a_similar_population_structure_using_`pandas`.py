# -*- coding: utf-8 -*-
"""finding a village with a similar population structure using `pandas`.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mY1CiJqdMa4M9RRXlYSCdVZUgIy6Msb5
"""

import pandas as pd
df = pd.read_html('https://en.wikipedia.org/wiki/All-time_Olympic_Games_medal_table')
print(df)

import pandas as pd
df = pd.read_html('https://en.wikipedia.org/wiki/All-time_Olympic_Games_medal_table')
df[1]

import pandas as pd
df = pd.read_html('https://en.wikipedia.org/wiki/All-time_Olympic_Games_medal_table', header = 0, index_col = 0)
df[1]

summer = df[1].iloc[:,:5]
summer

summer.columns = ['경기수', '금', '은', '동', '계']
print(summer)

import pandas as pd
df = pd.read_html('https://en.wikipedia.org/wiki/All-time_Olympic_Games_medal_table', header = 0, index_col = 0) 
summer = df[1].iloc[:,:5]
summer.columns = ['경기수', '금', '은', '동', '계']
print(summer.sort_values('금', ascending = False))

summer.to_excel('하계올림픽메달.xlsx')

import pandas as pd
index = pd.date_range('1/1/2000', periods =8)
print(index)

import numpy as np
df = pd.DataFrame(np.random.rand(8,3), index = index, columns = list('ABC'))
df

import pandas as pd
import numpy as np
index = pd.date_range('1/1/2000', periods =8)
df = pd.DataFrame(np.random.rand(8,3), index = index, columns = list('ABC'))
print(df['B'])

import pandas as pd
import numpy as np
index = pd.date_range('1/1/2000', periods =8)
df = pd.DataFrame(np.random.rand(8,3), index = index, columns = list('ABC'))
print(df['B'] > 0.4)

df2 = df[df['B'] > 0.4]
df2

df2 = df2.T
df2

import numpy as np
index = pd.date_range('1/1/2000', periods =8)
df = pd.DataFrame(np.random.rand(8,3), index = index, columns = list('ABC'))
df['D'] = df['A'] / df['B']  # A열의 값을 B열의 값으로 나눈 값을 D열에 저장
df

import pandas as pd
import numpy as np
index = pd.date_range('1/1/2000', periods =8)
df = pd.DataFrame(np.random.rand(8,3), index = index, columns = list('ABC'))
df['D'] = df['A'] / df['B']
df['E'] = np.sum(df, axis = 1)  #행 우선 계산 값을 E 열에 저장
df.head()

import pandas as pd
import numpy as np
index = pd.date_range('1/1/2000', periods =8)
df = pd.DataFrame(np.random.rand(8,3), index = index, columns = list('ABC'))
df['D'] = df['A'] / df['B']
df['E'] = np.sum(df, axis = 1)
df = df.sub(df['A'], axis =0)  #A열의 데이터를 기준으로 열 우선 계산
df.head()

import pandas as pd
import numpy as np
index = pd.date_range('1/1/2000', periods =8)
df = pd.DataFrame(np.random.rand(8,3), index = index, columns = list('ABC'))
df['D'] = df['A'] / df['B']
df['E'] = np.sum(df, axis = 1)
df = df.sub(df['A'], axis =0)  
df = df.div(df['C'], axis = 0)   #C열의 데이터를 기준으로 열 우선 계산
df.to_csv('test.csv')
df.head()

import pandas as pd
df = pd.read_csv('age.csv', encoding='cp949', index_col = 0)
df.head()

import pandas as pd
df = pd.read_csv('age.csv', encoding='cp949', index_col = 0)
df = df.div(df['총인구수'], axis =0)     # 전체 데이터를 총인구수로 나눠서 비율로 변환
del df['총인구수'], df['연령구간인구수']  # 총인구수, 연령구간인구수 열 삭제

name = input('원하는 지역의 이름을 입력해주세요 : ') #2. 지역 이름 입력
a = df.index.str.contains(name) #3. 해당 행을 찾아서 해당 지역의 인구 구조를 저장
df2 = df[a]
df2

import matplotlib.pyplot as plt
plt.rc('font', family ='Malgun Gothic')
df2.T.plot()
plt.show()

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
plt.rc('font', family ='Malgun Gothic')
df = pd.read_csv('age.csv', encoding='cp949', index_col = 0) 
df = df.div(df['총인구수'], axis = 0)     # ①-1. 전체 데이터를 총인구수로 나눠서 비율로 변환
del df['총인구수'], df['연령구간인구수']  # ①-2. 총인구수, 연령구간인구수 열 삭제
name = input('원하는 지역의 이름을 입력해주세요 : ')  # ② 지역 이름 입력
a = df.index.str.contains(name)  # ③ 해당 행을 찾아서 해당 지역의 인구 구조를 저장
df2 = df[a]
df.loc[np.power(df.sub(df2.iloc[0], axis = 1), 2).sum(axis = 1).sort_values().index[:5]].T.plot()
plt.show()


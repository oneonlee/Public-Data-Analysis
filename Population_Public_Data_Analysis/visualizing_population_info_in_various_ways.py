# -*- coding: utf-8 -*-
"""visualizing_population_info_in_various_ways.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p1JPv2zNQzvMOLMMQpm92e6CY-H_dmxW

# 우리 동네 인구 구조를 다양한 방법으로 나타내기
1. 꺾은선 그래프
2. 막대 그래프
3. 산점도

## 1. 꺾은선 그래프
"""

import csv
f = open('gender.csv', encoding='cp949')
data = csv.reader(f)
m = []
f = []
name = input('궁금한 동네를 입력해주세요 : ')
for row in data :
    if name in row[0] :
        for i in range(3,104) : 
            m.append(int(row[i]))
            f.append(int(row[i+103]))        
        break
import matplotlib.pyplot as plt

plt.plot(m, label = 'Male')
plt.plot(f, label = 'Female')
plt.legend()
plt.show()

"""## 2. 막대 그래프"""

import csv
f = open('gender.csv', encoding='cp949')
data = csv.reader(f)
result = []
name = input('궁금한 동네를 입력해주세요 : ')
for row in data :
    if name in row[0] :
        for i in range(3,104) : 
            result.append(int(row[i]) - int(row[i+103]))
        break
import matplotlib.pyplot as plt
plt.bar(range(101), result)
plt.show()

"""## 3. 산점도

### 우선, 4개의 데이터로 산점도 나타내보기
"""

import matplotlib.pyplot as plt
plt.style.use('ggplot')
plt.scatter([1,2,3,4], [10,30,20,40])
plt.show()

"""#### `s` 속성으로 데이터의 size 조절하여 버블 차트로 표현하기"""

import matplotlib.pyplot as plt
plt.style.use('ggplot')
plt.scatter([1,2,3,4], [10,30,20,40], s = [100,200,250,300])
plt.show()

"""#### `c` 속성으로 color 변경하기"""

import matplotlib.pyplot as plt
plt.style.use('ggplot')
plt.scatter([1,2,3,4], [10,30,20,40], s = [30,60,90,120], c = ['red','blue','green','gold'])
plt.show()

"""#### `colorbar()` 함수로 컬러바 추가하기"""

import matplotlib.pyplot as plt
plt.style.use('ggplot')
plt.scatter([1,2,3,4], [10,30,20,40], s = [30,60,90,120], c = range(4))
plt.colorbar()
plt.show()

"""#### `cmap`이라는 컬러맵 속성을 사용해 컬러바에 사용될 색상의 종류 정하기"""

import matplotlib.pyplot as plt
plt.style.use('ggplot')
plt.scatter([1,2,3,4], [10,30,20,40], s = [30,60,90,120], c =range(4), cmap='jet')
plt.colorbar()
plt.show()

"""### `random` 함수를 이용해 서로 다른 100개의 점 만들기"""

import matplotlib.pyplot as plt
import random
x = []
y = []
size = []
for i in range(100): 
    x.append(random.randint(50,100))
    y.append(random.randint(50,100))
    size.append(random.randint(10,100))
plt.style.use('ggplot')
plt.scatter(x, y, s = size)
plt.show()

"""#### `c` 속성에 `size` 리스트를 사용하여 크기에 따라 다른 색 표현"""

plt.scatter(x, y, s = size, c = size, cmap='jet')
plt.colorbar()
plt.show()

"""그런데, 위 결과에서 작은 점이 큰 점에 가려진다.

#### `alpha` (투명도) 속성으로 투명도 조절하기

`alpha` 속성값의 범위는 0부터 1까지이며, 0에 가까워질수록 투명하고, 1에 가까울수록 불투명하다.
"""

plt.scatter(x, y, s = size, c = size, cmap='jet', alpha =0.7)
plt.colorbar()
plt.show()

plt.scatter(x, y, s = size, c = x, cmap='jet', alpha =0.7)
plt.colorbar()
plt.show()

"""### 우리 동네의 연령대별 성별 비율을 산점도로 표현하기"""

import csv
f = open('gender.csv', encoding='cp949')
data = csv.reader(f)
m = []
f = []
name = input('궁금한 동네를 입력해주세요 : ')
for row in data :
    if name in row[0] :
        for i in range(3,104) : 
            m.append(int(row[i]))
            f.append(int(row[i+103]))        
        break
import matplotlib.pyplot as plt
plt.style.use('ggplot')
plt.scatter(m, f)
plt.show()

"""#### 추세선과 컬러맵 적용"""

import matplotlib.pyplot as plt
plt.style.use('ggplot')
plt.scatter(m, f, c =range(101), alpha=0.5, cmap='jet')
plt.colorbar()
plt.plot(range(max(m)),range(max(m)), 'g') # 추세선 추가
plt.show()

"""#### 연령별 남성과 여성 인구수를 합친 값을 `size` 리스트에 넣어 점의 크기를 표현
이때, `math` 라이브러리의 제곱근 함수인 `sqrt()`를 사용하여 점의 크기를 적당히 조절
"""

import csv
import math
f = open('gender.csv', encoding='cp949')
data = csv.reader(f)
m = []
f = []
size = []
name = input('궁금한 동네를 입력해주세요 : ')
for row in data :
    if name in row[0] :
        for i in range(3,104) : 
            m.append(int(row[i]))
            f.append(int(row[i+103]))
            size.append(math.sqrt(int(row[i]) + int(row[i+103])))
        break
import matplotlib.pyplot as plt
plt.style.use('ggplot')
plt.rc('font',family='Malgun Gothic')
plt.figure(figsize = (10,5), dpi=300)            
plt.title(name+' 지역의 성별 인구 그래프')
plt.scatter(m, f, s = size, c = range(101), alpha=0.5, cmap='jet')
plt.colorbar()
plt.plot(range(max(m)),range(max(m)), 'g')
plt.xlabel('남성 인구 수')
plt.ylabel('여성 인구 수')
plt.show()
# -*- coding: utf-8 -*-
"""visualize_data_in_various_ways.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sroAJ3pNvLF3nsfW__wkgLysNW3ZsjN1

# 기온 데이터를 다양하게 시각화하기

## `hist()` 사용해서 히스토그램 그리기

참고) 서울의 최고 기온 데이터 전체를 꺾은선 그래프로 나타내본다면?
"""

import csv
f = open('seoul.csv', encoding='cp949')
data = csv.reader(f)
next(data)
result = []

for row in data :
    if row[-1] != '' :
        result.append(float(row[-1]))

import matplotlib.pyplot as plt
plt.figure(figsize = (10,2), dpi = 100)
plt.plot(result, 'r')
plt.show()

"""### `hist()` 사용해보기"""

import matplotlib.pyplot as plt
plt.hist([1,1,2,3,4,5,6,6,7,8,10])
plt.show()

"""---
<br>

### 주사위 시뮬레이션 (random)

`randint()`로 주사위 던지기
"""

import random
print(random.randint(1,6))

"""주사위 던지기를 5번 반복"""

import random
for i in range(5) :
    print(random.randint(1,6))

"""주사위를 던진 결과를 list에 저장"""

import random
dice = []
for i in range(5) :
    dice.append(random.randint(1,6))
print(dice)

"""#### 주사위를 던진 결과를 `hist()`를 통해 히스토그램으로 나타내보기

5번 던졌을 때
"""

import random
dice = []
for i in range(5) :
    dice.append(random.randint(1,6))
print(dice)

import matplotlib.pyplot as plt
plt.figure(dpi = 200)
plt.hist(dice, bins = 6)
plt.show()

"""100번 던졌을 때"""

import random
dice = []
for i in range(100) :
    dice.append(random.randint(1,6))
#print(dice)

import matplotlib.pyplot as plt
plt.figure(dpi = 200)
plt.hist(dice, bins = 6)
plt.show()

"""10,000번 던졌을 때"""

import random
dice = []
for i in range(10000) :
    dice.append(random.randint(1,6))

import matplotlib.pyplot as plt
plt.figure(dpi = 200)
plt.hist(dice, bins = 6)
plt.show()

"""---
<br>

### 기온 데이터를 히스토그램으로 표현하기

#### 서울의 최고 기온 데이터를 히스토그램으로 나타내보기
"""

import csv
f = open('seoul.csv', encoding='cp949')
data = csv.reader(f)
next(data)
result = []

for row in data :
    if row[-1] != '' :
        result.append(float(row[-1]))

import matplotlib.pyplot as plt
plt.figure(dpi = 150)
plt.hist(result, bins = 100, color = 'r')
plt.show()

"""`bins`를 1,000으로 바꿔본다면?"""

plt.figure(dpi = 100)
plt.hist(result, bins = 1000, color = 'r')
plt.show()

"""#### 서울의 8월의 최고 기온 데이터를 히스토그램으로 나타내보기"""

import csv
f = open('seoul.csv', encoding='cp949')
data = csv.reader(f)
next(data)
aug = []

for row in data :
    month = row[0].split('-')[1]
    if row[-1] != '' :
        if month == '08':
            aug.append(float(row[-1]))

import matplotlib.pyplot as plt
plt.figure(dpi = 100)
plt.hist(aug, bins = 100, color = 'r')
plt.show()

"""#### 1월과 8월의데이터를 히스토그램으로 시각화하기"""

import csv
f = open('seoul.csv', encoding='cp949')
data = csv.reader(f)
next(data)
aug = []
jan = []

for row in data :
    month = row[0].split('-')[1]
    if row[-1] != '' :
        if month == '08':
            aug.append(float(row[-1]))
        if month == '01':
            jan.append(float(row[-1]))

import matplotlib.pyplot as plt
plt.figure(dpi = 150)
plt.hist(aug, bins = 100, color = 'r', label = 'Aug')
plt.hist(jan, bins = 100, color = 'b', label = 'Jan')
plt.legend()
plt.show()

"""---

<br>

---

## `boxplot()`을 사용해서 기온 데이터를 상자 그림(boxplot)으로 표현하기

### `boxplot()` 사용해보기
"""

import matplotlib.pyplot as plt
#plt.figure(dpi = 300)
import random
result = []
for i in range(13) :
    result.append(random.randint(1,1000))
print(sorted(result))

plt.boxplot(result)
plt.show()

"""만약, 1/4, 2/4, 3/4의 정확한 값이 알고 싶다면?"""

import numpy as np
result = np.array(result)
print("1/4: " + str(np.percentile(result,25)))
print("2/4: " + str(np.percentile(result,50)))
print("3/4: " + str(np.percentile(result,75)))

"""---

<br>

### 기온 데이터를 상자 그림으로 표현하기

#### 서울의 최고 기온 데이터를 boxplot으로 나타내기
"""

import csv
f = open('seoul.csv', encoding='cp949')

data = csv.reader(f)
next(data)
result = []

for row in data :
    if row[-1] != '' :
        result.append(float(row[-1]))

import matplotlib.pyplot as plt
plt.figure(dpi = 100)
plt.boxplot(result)
plt.show()

"""#### 1월과 8월의 서울 최고 기온 데이터를 함께 그려보기"""

import csv
f = open('seoul.csv', encoding='cp949')
data = csv.reader(f)
next(data)
aug = []
jan = []

for row in data :
    month = row[0].split('-')[1]
    if row[-1] != '' :
        if month == '08':
            aug.append(float(row[-1]))
        if month == '01':
            jan.append(float(row[-1]))

import matplotlib.pyplot as plt
plt.figure(dpi = 100)
plt.boxplot(aug)
plt.boxplot(jan)
plt.show()

"""상자 그림의 위, 아래에 그려진 동그라미는 이상치(outlier) 값을 표현한다.<br>
다른 수치에 비해 너무 크거나 작은 값을 자동으로 나타낸 것이다.

#### 1월 데이터와 8월 데이터를 분리하여 그려보기
"""

import csv
f = open('seoul.csv', encoding='cp949')

data = csv.reader(f)
next(data)
aug = []
jan = []

for row in data :
    month = row[0].split('-')[1]
    if row[-1] != '' :
        if month == '08':
            aug.append(float(row[-1]))
        if month == '01':
            jan.append(float(row[-1]))

import matplotlib.pyplot as plt
plt.figure(dpi = 100)
plt.boxplot([aug,jan])
plt.show()

"""#### 월별 최고 기온 데이터 그려보기"""

import matplotlib.pyplot as plt
import csv
f = open('seoul.csv', encoding='cp949')

data = csv.reader(f)
next(data)
month = [[],[],[],[],[],[],[],[],[],[],[],[]]

for row in data :
    if row[-1] != '' :
        month[int(row[0].split('-')[1])-1].append(float(row[-1]))
        
plt.figure(figsize=(10,5), dpi=100)
plt.boxplot(month)
plt.show()

"""#### 8월 일별 기온 데이터를 상자 그림으로 표현하기"""

import matplotlib.pyplot as plt
import csv
f = open('seoul.csv', encoding='cp949')
data = csv.reader(f)
next(data)

day = []
for i in range(31) : 
    day.append([])

for row in data :
    if row[-1] != '' :
        if row[0].split('-')[1] == '08':
            day[int(row[0].split('-')[2])-1].append(float(row[-1]))

plt.boxplot(day, showfliers=False)
plt.show()

"""#### `ggplot` 스타일로 지정"""

import matplotlib.pyplot as plt
import csv
f = open('seoul.csv', encoding='cp949')
data = csv.reader(f)
next(data)

day = [[] for i in range(31)]

for row in data :
    if row[-1] != '' :
        if row[0].split('-')[1] == '08':
            day[int(row[0].split('-')[2])-1].append(float(row[-1]))
        
plt.style.use('ggplot')
plt.figure(figsize=(10,5), dpi=100)
plt.boxplot(day, showfliers=False)
plt.show()
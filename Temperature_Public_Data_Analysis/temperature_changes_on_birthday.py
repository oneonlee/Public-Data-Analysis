# -*- coding: utf-8 -*-
"""Temperature_Changes_on_Birthday.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OJvlJyrEE4vwFsOfRDMqpAS8y3qkpM8d
"""

import csv

f = open('seoul.csv', encoding="cp949")
data = csv.reader(f)

for row in data :
    print(row[0])

import csv

f = open('seoul.csv', encoding="cp949")

data = csv.reader(f)
next(data)

for row in data :
    print(row[-1])

import csv
import matplotlib.pyplot as plt

f = open('seoul.csv', encoding="cp949")

data = csv.reader(f)
next(data)
result = [] # 최고 기온 데이터를 저장할 리스트 생성

for row in data :
    if row[-1] != '' : # 최고 기온 데이터 값이 존재한다면
        result.append(float(row[-1])) # result 리스트에 최고 기온 값 추가


plt.plot(result, 'r')
plt.show()

print(len(result))

import csv
import matplotlib.pyplot as plt
f = open('seoul.csv', encoding="cp949")

data = csv.reader(f)
next(data)
result = []

for row in data :
    if row[-1] != '' : # 데이터가 비어있지 않으면
        result.append(float(row[-1]))

plt.plot(result, 'r') # result 리스트에 저장된 값을 빨간색 그래프로 그리기
plt.show() # 그래프 나타내기

import matplotlib.pyplot as plt
# plt.figure(figsize = (10,2))
plt.figure(figsize = (10,2), dpi = 300)
plt.plot(result, 'r')
plt.show()

s = 'hello python'
print(s)

print(s.split())

date = '1907-10-01'
print(date.split('-'))

print(date.split('-')[0]) # year
print(date.split('-')[1]) # month
print(date.split('-')[2]) # day

import csv

f = open('seoul.csv', encoding="cp949")

data = csv.reader(f)
next(data)
result = []

for row in data :
    if row[-1] != '' :
        if row[0].split('-')[1] == '03' :
          if row[0].split('-')[2] == '22' :
              result.append(float(row[-1]))

import matplotlib.pyplot as plt
#plt.figure(dpi = 300)
plt.plot(result, 'hotpink')
plt.show()

import csv

f = open('seoul.csv', encoding="cp949")

data = csv.reader(f)
next(data)
result = []

for row in data :
    if row[-1] != '' :
        if row[0].split('-')[1] == '02' and row[0].split('-')[2] == '14' :
            result.append(float(row[-1]))

import matplotlib.pyplot as plt
#plt.figure(dpi = 300)
plt.plot(result, 'hotpink')
plt.show()

import csv

f = open('seoul.csv', encoding="cp949")

data = csv.reader(f)
next(data)
high = []
low = []

for row in data :
    if row[-1] != '' and row[-2] != '' :
        if row[0].split('-')[1] == '02' and row[0].split('-')[2] == '14' :
            high.append(float(row[-1]))
            low.append(float(row[-2]))

import matplotlib.pyplot as plt
#plt.figure(dpi = 300)
plt.plot(high, 'hotpink')
plt.plot(low, 'skyblue')
plt.show()

import csv

f = open('seoul.csv', encoding="cp949")

data = csv.reader(f)
next(data)
high = []
low = []

for row in data :
    if row[-1] != '' and row[-2] != '' :
        if 1983 <= int(row[0].split('-')[0]) :
            if row[0].split('-')[1] == '02' and row[0].split('-')[2] == '14' :
                high.append(float(row[-1]))
                low.append(float(row[-2]))

import matplotlib.pyplot as plt
#plt.figure(dpi = 300)
plt.plot(high, 'hotpink')
plt.plot(low, 'skyblue')
plt.show()

!apt-get update -qq
!apt-get install fonts-nanum* -qq

import matplotlib.font_manager as fm
import warnings
warnings.filterwarnings(action='ignore') 

path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf' # 나눔 고딕
font_name = fm.FontProperties(fname=path, size=10).get_name() # 기본 폰트 사이즈 : 10
plt.rc('font', family=font_name)
fm._rebuild()

plt.rc('font', family='NanumBarunGothic')

import csv

f = open('seoul.csv', encoding="cp949")

data = csv.reader(f)
next(data)
high = []
low = []

for row in data :
    if row[-1] != '' and row[-2] != '' :
        if 1983 <= int(row[0].split('-')[0]) :
            if row[0].split('-')[1] == '02' and row[0].split('-')[2] == '14' :
                high.append(float(row[-1]))
                low.append(float(row[-2]))

import matplotlib.pyplot as plt
#plt.figure(dpi = 300)
plt.plot(high, 'hotpink')
plt.plot(low, 'skyblue')
plt.rc('font', family ='Gothic')
plt.title('내 생일의 기온 변화 그래프')
plt.show()

import csv
import matplotlib.pyplot as plt

f = open('seoul.csv', encoding="cp949")

data = csv.reader(f)
next(data)
high = [] # 최고 기온 값을 저장할 리스트 high 생성
low = [] # 최저 기온 값을 저장할 리스트 low 생성

for row in data :
    if row[-1] != '' and row[-2] != '' : # 최고 기온 값과 최저 기온 값이 존재한다면
        date = row[0].split('-') # 날짜 값을 – 문자를 기준으로 구분하여 저장
        if 1983 <= int(date[0]) : # 1983년 이후 데이터라면
            if date[1] == '02' and date[2] == '14' : # 2월 14일이라면
                high.append(float(row[-1])) # 최고 기온 값을 high 리스트에 저장
                low.append(float(row[-2])) # 최저 기온 값을 low 리스트에 저장

                plt.rc('font', family = font_name) # 맑은 고딕을 기본 글꼴로 설정
plt.rcParams['axes.unicode_minus'] = False # 마이너스 기호 깨짐 방지
plt.title('내 생일의 기온 변화 그래프') # 제목 설정
plt.plot(high, 'hotpink', label = 'high') # high 리스트에 저장된 값을 hotpink 색으로 그리고 레이블을 표시

plt.plot(low, 'skyblue', label = 'low') # low 리스트에 저장된 값을 skyblue 색으로 그리고 레이블을 표시
plt.legend() # 범례 표시
plt.show() # 그래프 나타내기

